@import "./variables.scss";
@import "./utils.scss";

@mixin string($gauge: 3px, $orientation: vertical){
  display: block;
  background-color: $default-string-color;
  box-shadow: -1px 0 1px 0px $shadow-color;
	@if $orientation == vertical {
	  width: $gauge;
	  height: $default-fret-height + $fretbar-height;
		@include centering(relative, horizontal);
	}
	@else if $orientation == horizontal {
		width: $default-fret-height + $fretbar-height;
	  height: $gauge;
		@include centering(relative, vertical);
	}
}

@mixin mark($diameter: 20px, $centering-dir: both, $bg: transparent){
	@include centering(absolute, $centering-dir);
	display: block;
	width: $diameter;
	height: $diameter;
	background-color: $bg;
	border-radius: 50%;
}

@mixin inlays($diameter, $orientation: vertical){
	@if $orientation == vertical {
		@include mark($diameter, vertical, $inlays-color);
		right: -($diameter / 2);
	}
	@else if $orientation == horizontal {
		@include mark($diameter, horizontal, $inlays-color);
		top: -($diameter / 2);;
	}
}

@mixin fret-setting($orientation: vertical){
	position: relative;
	display: block;
	@if $orientation == vertical {
		height: $default-fret-height;
		width: $default-fret-width;
	}
	@else if $orientation == horizontal{
		height: $default-fret-width;
		width: $default-fret-height;
	}
	background: transparent;
}

.fa-container {
	@include display-flex(inline-flex);
  font-family: sans-serif, Helvetica, monospace !important;
  font-size: 16px !important;
  text-align: center !important;

	&.vertical {
		@include flex-flow(column nowrap);
		.fa-tuning {
			@include flex-flow(row nowrap);
			border-radius: 10px 10px 0 0;
			border-bottom: $nut-height solid $nut-color;
		}
    .fa-viewport{
      height: $default-viewport-ver-size;
      width: auto;
  		.fa-fretboard {
  			@include flex-flow(row nowrap);
  			.fa-string {
  				@include flex-flow(column nowrap);
  				.fa-fret {
  					@include fret-setting(vertical);
  					border-bottom: $fretbar-height solid $fretbar-color;
  					.fa-string-image { @include string(3px, vertical); }
  					&.inlays { &:after { @include inlays($inlay-width, vertical); } }
  				}
  			}
  		}
    }
	}
	&.horizontal {
		@include flex-flow(row nowrap);
		.fa-tuning {
			@include flex-flow(column-reverse nowrap);
			border-radius: 10px 0 0 10px;
			border-right: $nut-height solid $nut-color;
		}
    .fa-viewport{
      height: auto;
      width: $default-viewport-hor-size;
  		.fa-fretboard {
  			@include flex-flow(column-reverse nowrap);
  			.fa-string {
  				@include flex-flow(row nowrap);
  				.fa-fret {
  					@include fret-setting(horizontal);
  					border-right: $fretbar-height solid $fretbar-color;
  					.fa-string-image { @include string(3px, horizontal); }
  					&.inlays { &:after { @include inlays($inlay-width, horizontal); } }
  				}
  			}
  		}
    }
	}
}

.fa-tuning {
	@include display-flex(inline-flex);
	box-shadow: 0px 0px 10px 2px rgba($shadow-color, 0.5);
	background-color: $default-tuning-bg;
	color: $default-tuning-font-color;
	z-index: 0;

	.fa-keytext-container {
		position: relative;
		display: inline-block;
		height: $tuning-height;
		width: $tuning-width;
		.fa-keytext {
			@include centering(absolute, both);
			display: block;
		}
	}
}

.fa-viewport {
  @include display-flex(inline-flex);
  z-index: 0;
  background: $default-fretboard-bg;
  box-shadow: 0px 0px 10px 2px rgba($shadow-color, 0.5);
  cursor: move;
  overflow: hidden;
}

.fa-fretboard {
	@include display-flex(inline-flex);
	z-index: 0;
}

.fa-string {
	@include display-flex(inline-flex);
	background: transparent;

	.fa-fret {
    @include flex(1 0 auto);
		&:after {
			content: "";
		}
		&.inlays {
			&:after {
			}
		}

		.fa-string-image {
			z-index: 1;
		}
	}
}

// should be placed in fa-string-image
.fa-note {
	@include mark(30px, both, $default-note-bg-color);
  z-index: 3;
  box-shadow: 0 0 1px 0px $shadow-color;
	color: $default-note-font-color;

	&.hide {
		display: none;
	}

  .fa-note-text {
    @include centering(absolute, both);
    display: block;
  }
}
